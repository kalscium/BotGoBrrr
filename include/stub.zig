//! Stubbed definitions of PROS functions

const std = @import("std");

export fn fopen() callconv(.C) void {}
export fn fclose() callconv(.C) void {}
export fn feof() callconv(.C) void {}
export fn ferror() callconv(.C) void {}
export fn fread() callconv(.C) void {}
export fn freopen() callconv(.C) void {}
export fn fseek() callconv(.C) void {}
export fn ftell() callconv(.C) void {}
export fn fwrite() callconv(.C) void {}
export fn remove() callconv(.C) void {}
export fn rewind() callconv(.C) void {}
export fn printf() callconv(.C) void {}
export fn fprintf() callconv(.C) void {}
export fn scanf() callconv(.C) void {}
export fn fscanf() callconv(.C) void {}
export fn fgetc() callconv(.C) void {}
export fn fgets() callconv(.C) void {}
export fn fputc() callconv(.C) void {}
export fn fputs() callconv(.C) void {}
export fn putchar() callconv(.C) void {}
export fn puts() callconv(.C) void {}

// PROS stubs
export fn adi_port_get_config() callconv(.C) void {}
export fn adi_port_get_value() callconv(.C) void {}
export fn adi_port_set_config() callconv(.C) void {}
export fn adi_port_set_value() callconv(.C) void {}
export fn adi_analog_calibrate() callconv(.C) void {}
export fn adi_analog_read() callconv(.C) void {}
export fn adi_analog_read_calibrated() callconv(.C) void {}
export fn adi_analog_read_calibrated_HR() callconv(.C) void {}
export fn adi_digital_read() callconv(.C) void {}
export fn adi_digital_get_new_press() callconv(.C) void {}
export fn adi_digital_write() callconv(.C) void {}
export fn adi_pin_mode() callconv(.C) void {}
export fn adi_motor_set() callconv(.C) void {}
export fn adi_motor_get() callconv(.C) void {}
export fn adi_motor_stop() callconv(.C) void {}
export fn adi_encoder_get() callconv(.C) void {}
export fn adi_encoder_init() callconv(.C) void {}
export fn adi_encoder_reset() callconv(.C) void {}
export fn adi_encoder_shutdown() callconv(.C) void {}
export fn adi_ultrasonic_get() callconv(.C) void {}
export fn adi_ultrasonic_init() callconv(.C) void {}
export fn adi_ultrasonic_shutdown() callconv(.C) void {}
export fn adi_gyro_get() callconv(.C) void {}
export fn adi_gyro_init() callconv(.C) void {}
export fn adi_gyro_reset() callconv(.C) void {}
export fn adi_gyro_shutdown() callconv(.C) void {}
export fn adi_potentiometer_init() callconv(.C) void {}
export fn adi_potentiometer_type_init() callconv(.C) void {}
export fn adi_potentiometer_get_angle() callconv(.C) void {}
export fn adi_led_init() callconv(.C) void {}
export fn adi_led_clear_all() callconv(.C) void {}
export fn adi_led_set_all() callconv(.C) void {}
export fn adi_led_set_pixel() callconv(.C) void {}
export fn adi_led_clear_pixel() callconv(.C) void {}
export fn task_abort_delay() callconv(.C) void {}
export fn mutex_recursive_create() callconv(.C) void {}
export fn mutex_recursive_take() callconv(.C) void {}
export fn mutex_recursive_give() callconv(.C) void {}
export fn mutex_get_owner() callconv(.C) void {}
export fn sem_create() callconv(.C) void {}
export fn sem_delete() callconv(.C) void {}
export fn sem_binary_create() callconv(.C) void {}
export fn sem_wait() callconv(.C) void {}
export fn sem_post() callconv(.C) void {}
export fn sem_get_count() callconv(.C) void {}
export fn queue_create() callconv(.C) void {}
export fn queue_prepend() callconv(.C) void {}
export fn queue_append() callconv(.C) void {}
export fn queue_peek() callconv(.C) void {}
export fn queue_recv() callconv(.C) void {}
export fn queue_get_waiting() callconv(.C) void {}
export fn queue_get_available() callconv(.C) void {}
export fn queue_delete() callconv(.C) void {}
export fn queue_reset() callconv(.C) void {}
export fn registry_bind_port() callconv(.C) void {}
export fn registry_unbind_port() callconv(.C) void {}
export fn registry_get_bound_type() callconv(.C) void {}
export fn registry_get_plugged_type() callconv(.C) void {}
export fn serctl() callconv(.C) void {}
export fn fdctl() callconv(.C) void {}
export fn motor_set_reversed() callconv(.C) void {}
export fn motor_is_reversed() callconv(.C) void {}
export fn get_plugged_type() callconv(.C) void {}
export fn distance_get() callconv(.C) void {}
export fn distance_get_confidence() callconv(.C) void {}
export fn distance_get_object_size() callconv(.C) void {}
export fn distance_get_object_velocity() callconv(.C) void {}
export fn ext_adi_port_get_config() callconv(.C) void {}
export fn ext_adi_port_get_value() callconv(.C) void {}
export fn ext_adi_port_set_config() callconv(.C) void {}
export fn ext_adi_port_set_value() callconv(.C) void {}
export fn ext_adi_analog_calibrate() callconv(.C) void {}
export fn ext_adi_analog_read() callconv(.C) void {}
export fn ext_adi_analog_read_calibrated() callconv(.C) void {}
export fn ext_adi_analog_read_calibrated_HR() callconv(.C) void {}
export fn ext_adi_digital_read() callconv(.C) void {}
export fn ext_adi_digital_get_new_press() callconv(.C) void {}
export fn ext_adi_digital_write() callconv(.C) void {}
export fn ext_adi_pin_mode() callconv(.C) void {}
export fn ext_adi_motor_set() callconv(.C) void {}
export fn ext_adi_motor_get() callconv(.C) void {}
export fn ext_adi_encoder_get() callconv(.C) void {}
export fn ext_adi_encoder_init() callconv(.C) void {}
export fn ext_adi_encoder_reset() callconv(.C) void {}
export fn ext_adi_ultrasonic_get() callconv(.C) void {}
export fn ext_adi_ultrasonic_init() callconv(.C) void {}
export fn ext_adi_gyro_get() callconv(.C) void {}
export fn ext_adi_gyro_init() callconv(.C) void {}
export fn ext_adi_gyro_reset() callconv(.C) void {}
export fn ext_adi_potentiometer_init() callconv(.C) void {}
export fn ext_adi_led_init() callconv(.C) void {}
export fn ext_adi_led_clear_all() callconv(.C) void {}
export fn ext_adi_led_set() callconv(.C) void {}
export fn ext_adi_led_set_all() callconv(.C) void {}
export fn ext_adi_led_set_pixel() callconv(.C) void {}
export fn gps_set_offset() callconv(.C) void {}
export fn gps_get_offset() callconv(.C) void {}
export fn gps_set_position() callconv(.C) void {}
export fn gps_set_data_rate() callconv(.C) void {}
export fn gps_get_error() callconv(.C) void {}
export fn gps_get_position_and_orientation() callconv(.C) void {}
export fn gps_get_position() callconv(.C) void {}
export fn gps_get_position_x() callconv(.C) void {}
export fn gps_get_position_y() callconv(.C) void {}
export fn gps_get_orientation() callconv(.C) void {}
export fn gps_get_pitch() callconv(.C) void {}
export fn gps_get_roll() callconv(.C) void {}
export fn gps_get_yaw() callconv(.C) void {}
export fn gps_get_heading() callconv(.C) void {}
export fn gps_get_heading_raw() callconv(.C) void {}
export fn gps_get_gyro_rate() callconv(.C) void {}
export fn gps_get_gyro_rate_x() callconv(.C) void {}
export fn gps_get_gyro_rate_y() callconv(.C) void {}
export fn gps_get_gyro_rate_z() callconv(.C) void {}
export fn gps_get_accel() callconv(.C) void {}
export fn gps_get_accel_x() callconv(.C) void {}
export fn gps_get_accel_y() callconv(.C) void {}
export fn gps_get_accel_z() callconv(.C) void {}
export fn imu_reset() callconv(.C) void {}
export fn imu_reset_blocking() callconv(.C) void {}
export fn imu_set_data_rate() callconv(.C) void {}
export fn imu_get_rotation() callconv(.C) void {}
export fn imu_get_heading() callconv(.C) void {}
export fn imu_get_quaternion() callconv(.C) void {}
export fn imu_get_euler() callconv(.C) void {}
export fn imu_get_gyro_rate() callconv(.C) void {}
export fn imu_get_accel() callconv(.C) void {}
export fn imu_get_status() callconv(.C) void {}
export fn imu_set_euler() callconv(.C) void {}
export fn imu_get_pitch() callconv(.C) void {}
export fn imu_get_roll() callconv(.C) void {}
export fn imu_get_yaw() callconv(.C) void {}
export fn imu_tare_rotation() callconv(.C) void {}
export fn imu_tare_pitch() callconv(.C) void {}
export fn imu_tare_roll() callconv(.C) void {}
export fn imu_tare_yaw() callconv(.C) void {}
export fn imu_tare_euler() callconv(.C) void {}
export fn imu_set_rotation() callconv(.C) void {}
export fn imu_set_heading() callconv(.C) void {}
export fn imu_set_pitch() callconv(.C) void {}
export fn imu_set_roll() callconv(.C) void {}
export fn imu_set_yaw() callconv(.C) void {}
export fn link_init() callconv(.C) void {}
export fn link_init_override() callconv(.C) void {}
export fn link_connected() callconv(.C) void {}
export fn link_raw_receivable_size() callconv(.C) void {}
export fn link_raw_transmittable_size() callconv(.C) void {}
export fn link_transmit_raw() callconv(.C) void {}
export fn link_receive_raw() callconv(.C) void {}
export fn link_transmit() callconv(.C) void {}
export fn link_receive() callconv(.C) void {}
export fn competition_get_status() callconv(.C) void {}
export fn competition_is_disabled() callconv(.C) void {}
export fn competition_is_connected() callconv(.C) void {}
export fn competition_is_autonomous() callconv(.C) void {}
export fn competition_is_field() callconv(.C) void {}
export fn competition_is_switch() callconv(.C) void {}
export fn controller_is_connected() callconv(.C) void {}
export fn controller_get_analog() callconv(.C) void {}
export fn controller_get_battery_capacity() callconv(.C) void {}
export fn controller_get_digital() callconv(.C) void {}
export fn controller_get_digital_new_press() callconv(.C) void {}
export fn controller_print() callconv(.C) void {}
export fn controller_set_text() callconv(.C) void {}
export fn controller_clear_line() callconv(.C) void {}
export fn controller_clear() callconv(.C) void {}
export fn controller_rumble() callconv(.C) void {}
export fn battery_get_voltage() callconv(.C) void {}
export fn battery_get_current() callconv(.C) void {}
export fn battery_get_temperature() callconv(.C) void {}
export fn battery_get_capacity() callconv(.C) void {}
export fn usd_is_installed() callconv(.C) void {}
export fn motor_move() callconv(.C) void {}
export fn motor_brake() callconv(.C) void {}
export fn motor_move_absolute() callconv(.C) void {}
export fn motor_move_relative() callconv(.C) void {}
export fn motor_move_velocity() callconv(.C) void {}
export fn motor_move_voltage() callconv(.C) void {}
export fn motor_modify_profiled_velocity() callconv(.C) void {}
export fn motor_get_target_position() callconv(.C) void {}
export fn motor_get_actual_velocity() callconv(.C) void {}
export fn motor_get_current_draw() callconv(.C) void {}
export fn motor_get_direction() callconv(.C) void {}
export fn motor_get_efficiency() callconv(.C) void {}
export fn motor_is_over_current() callconv(.C) void {}
export fn motor_get_faults() callconv(.C) void {}
export fn motor_get_flags() callconv(.C) void {}
export fn motor_get_raw_position() callconv(.C) void {}
export fn motor_get_position() callconv(.C) void {}
export fn motor_get_power() callconv(.C) void {}
export fn motor_get_temperature() callconv(.C) void {}
export fn motor_get_torque() callconv(.C) void {}
export fn motor_set_zero_position() callconv(.C) void {}
export fn motor_tare_position() callconv(.C) void {}
export fn motor_set_brake_mode() callconv(.C) void {}
export fn motor_set_current_limit() callconv(.C) void {}
export fn motor_set_encoder_units() callconv(.C) void {}
export fn motor_set_gearing() callconv(.C) void {}
export fn motor_set_voltage_limit() callconv(.C) void {}
export fn motor_get_brake_mode() callconv(.C) void {}
export fn motor_get_current_limit() callconv(.C) void {}
export fn motor_get_encoder_units() callconv(.C) void {}
export fn motor_get_gearing() callconv(.C) void {}
export fn motor_get_voltage_limit() callconv(.C) void {}
export fn optical_get_hue() callconv(.C) void {}
export fn optical_get_saturation() callconv(.C) void {}
export fn optical_get_brightness() callconv(.C) void {}
export fn optical_get_proximity() callconv(.C) void {}
export fn optical_set_led_pwm() callconv(.C) void {}
export fn optical_get_led_pwm() callconv(.C) void {}
export fn optical_get_rgb() callconv(.C) void {}
export fn optical_get_raw() callconv(.C) void {}
export fn optical_get_gesture() callconv(.C) void {}
export fn optical_get_gesture_raw() callconv(.C) void {}
export fn optical_enable_gesture() callconv(.C) void {}
export fn optical_disable_gesture() callconv(.C) void {}
export fn optical_get_integration_time() callconv(.C) void {}
export fn rotation_reset() callconv(.C) void {}
export fn rotation_set_data_rate() callconv(.C) void {}
export fn rotation_reset_position() callconv(.C) void {}
export fn rotation_get_position() callconv(.C) void {}
export fn rotation_get_velocity() callconv(.C) void {}
export fn rotation_get_angle() callconv(.C) void {}
export fn rotation_set_reversed() callconv(.C) void {}
export fn rotation_reverse() callconv(.C) void {}
export fn rotation_init_reverse() callconv(.C) void {}
export fn rotation_get_reversed() callconv(.C) void {}
export fn millis() callconv(.C) void {}
export fn task_delete() callconv(.C) void {}
export fn task_delay() callconv(.C) void {}
export fn delay() callconv(.C) void {}
export fn task_delay_until() callconv(.C) void {}
export fn task_get_priority() callconv(.C) void {}
export fn task_set_priority() callconv(.C) void {}
export fn task_get_state() callconv(.C) void {}
export fn task_suspend() callconv(.C) void {}
export fn task_resume() callconv(.C) void {}
export fn task_get_by_name() callconv(.C) void {}
export fn task_get_current() callconv(.C) void {}
export fn task_notify() callconv(.C) void {}
export fn task_join() callconv(.C) void {}
export fn task_notify_ext() callconv(.C) void {}
export fn task_notify_take() callconv(.C) void {}
export fn task_notify_clear() callconv(.C) void {}
export fn mutex_create() callconv(.C) void {}
export fn mutex_take() callconv(.C) void {}
export fn mutex_give() callconv(.C) void {}
export fn mutex_delete() callconv(.C) void {}
export fn screen_set_pen() callconv(.C) void {}
export fn screen_set_eraser() callconv(.C) void {}
export fn screen_get_pen() callconv(.C) void {}
export fn screen_get_eraser() callconv(.C) void {}
export fn screen_erase() callconv(.C) void {}
export fn screen_scroll() callconv(.C) void {}
export fn screen_scroll_area() callconv(.C) void {}
export fn screen_copy_area() callconv(.C) void {}
export fn screen_draw_pixel() callconv(.C) void {}
export fn screen_erase_pixel() callconv(.C) void {}
export fn screen_draw_line() callconv(.C) void {}
export fn screen_erase_line() callconv(.C) void {}
export fn screen_draw_rect() callconv(.C) void {}
export fn screen_erase_rect() callconv(.C) void {}
export fn screen_fill_rect() callconv(.C) void {}
export fn screen_draw_circle() callconv(.C) void {}
export fn screen_erase_circle() callconv(.C) void {}
export fn screen_print() callconv(.C) void {}
export fn screen_print_at() callconv(.C) void {}
export fn screen_vprintf() callconv(.C) void {}
export fn screen_touch_status() callconv(.C) void {}
export fn serial_enable() callconv(.C) void {}
export fn serial_set_baudrate() callconv(.C) void {}
export fn serial_get_read_avail() callconv(.C) void {}
export fn serial_get_write_free() callconv(.C) void {}
export fn serial_peek_byte() callconv(.C) void {}
export fn serial_read_byte() callconv(.C) void {}
export fn serial_read() callconv(.C) void {}
export fn serial_write_byte() callconv(.C) void {}
export fn vision_get_by_size() callconv(.C) void {}
export fn vision_get_by_sig() callconv(.C) void {}
export fn vision_get_by_code() callconv(.C) void {}
export fn vision_get_exposure() callconv(.C) void {}
export fn vision_get_object_count() callconv(.C) void {}
export fn vision_get_white_balance() callconv(.C) void {}
export fn vision_print_signature() callconv(.C) void {}
export fn vision_get_signature() callconv(.C) void {}
export fn vision_set_signature() callconv(.C) void {}
export fn vision_set_auto_white_balance() callconv(.C) void {}
export fn vision_set_exposure() callconv(.C) void {}
export fn vision_set_led() callconv(.C) void {}
export fn vision_set_white_balance() callconv(.C) void {}
export fn vision_set_zero_point() callconv(.C) void {}
export fn vision_set_wifi_mode() callconv(.C) void {}
